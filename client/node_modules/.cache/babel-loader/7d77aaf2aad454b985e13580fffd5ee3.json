{"ast":null,"code":"var _jsxFileName = \"C:\\\\Glauber\\\\Progama\\xE7\\xE3o\\\\react_js\\\\instagram\\\\client\\\\src\\\\pages\\\\singin\\\\components\\\\DateForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst day = getDays();\nconst year = getYears();\n\nconst DateForm = () => {\n  _s();\n\n  const [hasAnErro, setErro] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"big-margin-bottom\",\n    onSubmit: e => {\n      e.preventDefault();\n      validateData(setErro);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"date-container\",\n      className: \"margin-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month-select\",\n        children: month.map(createOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"day-select\",\n        children: day.map(createOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year-select\",\n        children: year.map(createOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"small-text big-margin-bottom\",\n      children: \"You need to enter the date you were born\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"small-text margin-bottom\",\n      children: \"Use your own birthday, even if this account is for a business, a pet, or something else\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), hasAnErro !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"erro-text margin-bottom\",\n      children: hasAnErro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"next\",\n      className: \"main-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateForm, \"h33bd+JClJ2h+erg4lsRSzm31K4=\");\n\n_c = DateForm;\n\nconst createOption = (element, index) => {\n  return /*#__PURE__*/_jsxDEV(\"option\", {\n    value: index,\n    children: element\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\nfunction getDays() {\n  const maxDays = 30; // in the end 31\n\n  const days = new Array(maxDays);\n\n  for (let i = 0; i <= maxDays; i++) {\n    days[i] = i + 1;\n  }\n\n  return days;\n}\n\nfunction getYears() {\n  const currentYear = getCurrentYear();\n  let nextYear = currentYear - 120;\n  const years = new Array(120);\n\n  for (let i = 0; i <= 120; i++) {\n    years[i] = nextYear++;\n  }\n\n  return years.reverse();\n}\n\nfunction getCurrentYear() {\n  const d = new Date();\n  const year = d.getFullYear();\n  return year;\n}\n\nfunction getCurrentMonth() {\n  const d = new Date();\n  return d.getMonth();\n}\n\ngetCurrentDay();\n\nfunction getCurrentDay() {\n  const d = new Date();\n  console.log(d.getDay());\n}\n\nfunction validateData(setErro) {\n  const dayMarked = document.getElementById(\"day-select\").value;\n  const monthMarked = document.getElementById(\"month-select\").value;\n  const yearMarked = document.getElementById(\"year-select\").value;\n  const erroInFrontEnd = validateDataInFrontEnd(dayMarked, monthMarked, yearMarked);\n  if (erroInFrontEnd === \"\") return validateDataInServer(setErro);\n}\n\nfunction validateDataInFrontEnd(indexOfDay, indexOfMonth, indexOfYear) {\n  const peopleUserHasMoreThan13YearsOld = validatetAge(indexOfDay, indexOfMonth, indexOfYear);\n}\n\nfunction validatetAge(indexOfDay, indexOfMonth, indexOfYear) {\n  const minYear = getCurrentYear() - 13;\n  if (minYear > year[indexOfYear]) return \"you have to be older than 13\";\n  if (minYear < year[indexOfYear]) return \"\";\n  if (minYear === year[indexOfYear]) return validateMonth(indexOfDay, indexOfMonth);\n}\n\nfunction validateMonth(indexOfDay, indexOfMonth) {\n  const currentMonth = getCurrentMonth();\n  if (currentMonth > indexOfMonth) return \"\";\n  if (currentMonth < indexOfMonth) return \"you have to be older than 13\";\n  if (currentMonth === indexOfMonth) return validateDay(indexOfDay);\n}\n\nfunction validateDay(indexOfDay) {}\n\nfunction validateDataInServer(setErro) {\n  /*axios.post(\"\", user).then((erro) => {\r\n    if(erro === \"\") return \"\";\r\n    setErro(erro);\r\n  });*/\n}\n\nexport default DateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateForm\");","map":{"version":3,"sources":["C:/Glauber/Progamação/react_js/instagram/client/src/pages/singin/components/DateForm.js"],"names":["axios","useState","month","day","getDays","year","getYears","DateForm","hasAnErro","setErro","e","preventDefault","validateData","map","createOption","element","index","maxDays","days","Array","i","currentYear","getCurrentYear","nextYear","years","reverse","d","Date","getFullYear","getCurrentMonth","getMonth","getCurrentDay","console","log","getDay","dayMarked","document","getElementById","value","monthMarked","yearMarked","erroInFrontEnd","validateDataInFrontEnd","validateDataInServer","indexOfDay","indexOfMonth","indexOfYear","peopleUserHasMoreThan13YearsOld","validatetAge","minYear","validateMonth","currentMonth","validateDay"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEE,MAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACd,MADc,EACN,QADM,EACI,WADJ,EACiB,SADjB,EAC4B,UAD5B,EACwC,UADxC,CAAd;AAEA,MAAMC,GAAG,GAAGC,OAAO,EAAnB;AACA,MAAMC,IAAI,GAAGC,QAAQ,EAArB;;AAEF,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAIrB,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,QAAQ,EAAGS,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,YAAY,CAACH,OAAD,CAAZ;AACD,KALH;AAAA,4BAOE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAC,eAAnC;AAAA,8BACE;AAAS,QAAA,EAAE,EAAC,cAAZ;AAAA,kBAA4BP,KAAK,CAACW,GAAN,CAAUC,YAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAS,QAAA,EAAE,EAAC,YAAZ;AAAA,kBAA0BX,GAAG,CAACU,GAAJ,CAAQC,YAAR;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAS,QAAA,EAAE,EAAC,aAAZ;AAAA,kBAA2BT,IAAI,CAACQ,GAAL,CAASC,YAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAoBGN,SAAS,KAAK,EAAd,iBAAoB;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,gBAAwCA;AAAxC;AAAA;AAAA;AAAA;AAAA,YApBvB,eAsBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CApCD;;GAAMD,Q;;KAAAA,Q;;AAuCN,MAAMO,YAAY,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvC,sBAAO;AAAQ,IAAA,KAAK,EAAEA,KAAf;AAAA,cAAmCD;AAAnC,KAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,SAASZ,OAAT,GAAmB;AACjB,QAAMa,OAAO,GAAG,EAAhB,CADiB,CACE;;AACnB,QAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUF,OAAV,CAAb;;AACA,OAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,OAApB,EAA6BG,CAAC,EAA9B,EAAkC;AAAEF,IAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUA,CAAC,GAAG,CAAd;AAAkB;;AACtD,SAAOF,IAAP;AACD;;AAED,SAASZ,QAAT,GAAoB;AAClB,QAAMe,WAAW,GAAGC,cAAc,EAAlC;AACA,MAAIC,QAAQ,GAAGF,WAAW,GAAG,GAA7B;AACA,QAAMG,KAAK,GAAG,IAAIL,KAAJ,CAAU,GAAV,CAAd;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BI,IAAAA,KAAK,CAACJ,CAAD,CAAL,GAAWG,QAAQ,EAAnB;AACD;;AACD,SAAOC,KAAK,CAACC,OAAN,EAAP;AACD;;AAED,SAASH,cAAT,GAA0B;AACxB,QAAMI,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,QAAMtB,IAAI,GAAGqB,CAAC,CAACE,WAAF,EAAb;AACA,SAAOvB,IAAP;AACD;;AAGD,SAASwB,eAAT,GAA2B;AACzB,QAAMH,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,SAAOD,CAAC,CAACI,QAAF,EAAP;AACD;;AAEDC,aAAa;;AAEb,SAASA,aAAT,GAAyB;AACvB,QAAML,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACQ,MAAF,EAAZ;AACD;;AAGD,SAAStB,YAAT,CAAsBH,OAAtB,EAA+B;AAC7B,QAAM0B,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAxD;AACA,QAAMC,WAAW,GAAGH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAA5D;AACA,QAAME,UAAU,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAA1D;AACA,QAAMG,cAAc,GAAGC,sBAAsB,CAACP,SAAD,EAAYI,WAAZ,EAAyBC,UAAzB,CAA7C;AACA,MAAGC,cAAc,KAAK,EAAtB,EAA0B,OAAOE,oBAAoB,CAAClC,OAAD,CAA3B;AAE3B;;AAGD,SAASiC,sBAAT,CAAgCE,UAAhC,EAA4CC,YAA5C,EAA0DC,WAA1D,EAAuE;AACrE,QAAMC,+BAA+B,GAAGC,YAAY,CAACJ,UAAD,EAAaC,YAAb,EAA2BC,WAA3B,CAApD;AAED;;AAGD,SAASE,YAAT,CAAsBJ,UAAtB,EAAkCC,YAAlC,EAAgDC,WAAhD,EAA6D;AAC3D,QAAMG,OAAO,GAAG3B,cAAc,KAAK,EAAnC;AACA,MAAG2B,OAAO,GAAG5C,IAAI,CAACyC,WAAD,CAAjB,EAAgC,OAAO,8BAAP;AAChC,MAAGG,OAAO,GAAG5C,IAAI,CAACyC,WAAD,CAAjB,EAAgC,OAAO,EAAP;AAChC,MAAGG,OAAO,KAAK5C,IAAI,CAACyC,WAAD,CAAnB,EAAkC,OAAOI,aAAa,CAACN,UAAD,EAAaC,YAAb,CAApB;AACnC;;AAGD,SAASK,aAAT,CAAuBN,UAAvB,EAAmCC,YAAnC,EAAiD;AAC/C,QAAMM,YAAY,GAAGtB,eAAe,EAApC;AACA,MAAGsB,YAAY,GAAGN,YAAlB,EAAgC,OAAO,EAAP;AAChC,MAAGM,YAAY,GAAGN,YAAlB,EAAgC,OAAO,8BAAP;AAChC,MAAGM,YAAY,KAAKN,YAApB,EAAkC,OAAOO,WAAW,CAACR,UAAD,CAAlB;AACnC;;AAGD,SAASQ,WAAT,CAAqBR,UAArB,EAAiC,CAEhC;;AAGD,SAASD,oBAAT,CAA8BlC,OAA9B,EAAuC;AACrC;AACF;AACA;AACA;AACC;;AAED,eAAeF,QAAf","sourcesContent":["import axios from 'axios';\r\nimport {useState} from 'react';\r\n\r\n  const month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  const day = getDays();\r\n  const year = getYears();\r\n\r\nconst DateForm = () => {\r\n\r\n  \r\n\r\n  const [hasAnErro, setErro] = useState(\"\");\r\n\r\n  return (\r\n    <form \r\n      className=\"big-margin-bottom\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        validateData(setErro);\r\n      }}\r\n    >\r\n      <div id=\"date-container\" className=\"margin-bottom\">\r\n        <select  id=\"month-select\">{month.map(createOption)}</select>\r\n        <select  id=\"day-select\">{day.map(createOption)}</select>\r\n        <select  id=\"year-select\">{year.map(createOption)}</select>\r\n      </div>\r\n      <div className=\"small-text big-margin-bottom\">\r\n        You need to enter the date you were born\r\n      </div>\r\n      <div className=\"small-text margin-bottom\">\r\n        Use your own birthday, even if this account is for a business, \r\n        a pet, or something else\r\n      </div>\r\n      \r\n      {hasAnErro !== \"\" && <p className=\"erro-text margin-bottom\">{hasAnErro}</p>}\r\n\r\n      <input \r\n        type=\"submit\"\r\n        value=\"next\"\r\n        className=\"main-button\"\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst createOption = (element, index) => {\r\n  return <option value={index} key={index}>{element}</option>;\r\n}\r\n\r\nfunction getDays() {\r\n  const maxDays = 30;// in the end 31\r\n  const days = new Array(maxDays);\r\n  for(let i = 0; i <= maxDays; i++) { days[i] = i + 1; }\r\n  return days;\r\n}\r\n\r\nfunction getYears() {\r\n  const currentYear = getCurrentYear();\r\n  let nextYear = currentYear - 120;\r\n  const years = new Array(120);\r\n  for(let i = 0; i <= 120; i++) {\r\n    years[i] = nextYear++;\r\n  }\r\n  return years.reverse();\r\n}\r\n\r\nfunction getCurrentYear() {\r\n  const d = new Date();\r\n  const year = d.getFullYear();\r\n  return year;\r\n}\r\n\r\n\r\nfunction getCurrentMonth() {\r\n  const d = new Date();\r\n  return d.getMonth();\r\n}\r\n\r\ngetCurrentDay();\r\n\r\nfunction getCurrentDay() {\r\n  const d = new Date();\r\n  console.log(d.getDay())\r\n}\r\n\r\n\r\nfunction validateData(setErro) {\r\n  const dayMarked = document.getElementById(\"day-select\").value;\r\n  const monthMarked = document.getElementById(\"month-select\").value;\r\n  const yearMarked = document.getElementById(\"year-select\").value;\r\n  const erroInFrontEnd = validateDataInFrontEnd(dayMarked, monthMarked, yearMarked);\r\n  if(erroInFrontEnd === \"\") return validateDataInServer(setErro);\r\n\r\n}\r\n\r\n\r\nfunction validateDataInFrontEnd(indexOfDay, indexOfMonth, indexOfYear) {\r\n  const peopleUserHasMoreThan13YearsOld = validatetAge(indexOfDay, indexOfMonth, indexOfYear);\r\n\r\n}\r\n\r\n\r\nfunction validatetAge(indexOfDay, indexOfMonth, indexOfYear) {\r\n  const minYear = getCurrentYear() - 13;\r\n  if(minYear > year[indexOfYear]) return \"you have to be older than 13\";\r\n  if(minYear < year[indexOfYear]) return \"\";\r\n  if(minYear === year[indexOfYear]) return validateMonth(indexOfDay, indexOfMonth);\r\n}\r\n\r\n\r\nfunction validateMonth(indexOfDay, indexOfMonth) {\r\n  const currentMonth = getCurrentMonth();\r\n  if(currentMonth > indexOfMonth) return \"\";\r\n  if(currentMonth < indexOfMonth) return \"you have to be older than 13\";\r\n  if(currentMonth === indexOfMonth) return validateDay(indexOfDay);\r\n}\r\n\r\n\r\nfunction validateDay(indexOfDay) {\r\n\r\n}\r\n\r\n\r\nfunction validateDataInServer(setErro) {\r\n  /*axios.post(\"\", user).then((erro) => {\r\n    if(erro === \"\") return \"\";\r\n    setErro(erro);\r\n  });*/\r\n}\r\n\r\nexport default DateForm;"]},"metadata":{},"sourceType":"module"}