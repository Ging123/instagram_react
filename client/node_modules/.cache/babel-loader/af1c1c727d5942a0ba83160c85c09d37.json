{"ast":null,"code":"var _jsxFileName = \"C:\\\\Glauber\\\\Progama\\xE7\\xE3o\\\\react_js\\\\instagram\\\\client\\\\src\\\\global_components\\\\DefaultInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction setInputClass(inputType) {\n  if (inputType !== \"password\") return \"default-input text-up\";\n  return \"default-input text-up input-password\";\n}\n\nconst DefaultInput = ({\n  type,\n  value,\n  onChange,\n  classOfContainer,\n  placeholder\n}) => {\n  _s();\n\n  const placeholderRef = useRef();\n  const inputRef = useRef();\n  const showAndHideRef = useRef();\n  const inputClass = setInputClass(type);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `position-relative ${classOfContainer}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      value: value,\n      className: inputClass,\n      ref: inputRef,\n      onChange: e => {\n        onChange(e.target.value);\n        manipulatePlaceholderPosition(placeholderRef.current, inputRef.current);\n\n        if (type === \"password\") {\n          manipulateShowAndHideVisibility(showAndHideRef.current, inputRef.current);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"placeholder position-down\",\n      ref: placeholderRef,\n      children: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: showAndHideRef,\n      className: \"show-and-hide invisible\",\n      onClick: () => manipulatePasswordVisibility(showAndHideRef.current, inputRef.current),\n      children: \"Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DefaultInput, \"HM2EfO++hiIQKsi1AHfiU/Gu+NQ=\");\n\n_c = DefaultInput;\nDefaultInput.defaultProps = {\n  type: \"text\",\n  classOfContainer: \"\",\n  onChange: () => \"\",\n  value: \"\",\n  placeholder: \"\"\n}; //FUNCTIONS TO MANIPULATE PLACEHOLDER MOVES\n\nfunction manipulatePlaceholderPosition(placeholder, input) {\n  const mustMovePlaceholder = verifyIfMustMovePlaceholder(input, placeholder);\n\n  if (mustMovePlaceholder.to === \"up\") {\n    moveInputPlaceholderUp(placeholder);\n    moveInputTextDown(input);\n  }\n\n  if (mustMovePlaceholder.to === \"down\") {\n    moveInputPlaceholderDown(placeholder);\n    moveInputTextUp(input);\n  }\n}\n\nfunction verifyIfMustMovePlaceholder(input, placeholder) {\n  if (input.value !== \"\") return verifyIfPlaceholderMustUp(placeholder);\n  return verifyIfPlaceholderMustDown(placeholder);\n}\n\nfunction verifyIfPlaceholderMustUp(placeholder) {\n  if (placeholder.className === \"placeholder position-up\") return {\n    to: \"\"\n  };\n  return {\n    to: \"up\"\n  };\n}\n\nfunction verifyIfPlaceholderMustDown(placeholder) {\n  if (placeholder.className === \"placeholder position-down\") return {\n    to: \"\"\n  };\n  return {\n    to: \"down\"\n  };\n}\n\nconst moveInputPlaceholderUp = placeholder => {\n  placeholder.className = \"placeholder position-up\";\n};\n\nconst moveInputPlaceholderDown = placeholder => {\n  placeholder.className = \"placeholder position-down\";\n};\n\nconst moveInputTextUp = input => {\n  if (input.type !== \"password\") return input.className = \"default-input text-up\";\n  input.className = \"default-input text-up input-password\";\n};\n\nconst moveInputTextDown = input => {\n  if (input.type !== \"password\") return input.className = \"default-input text-down\";\n  input.className = \"default-input text-down input-password\";\n}; //FUNCTION TO MANIPULATE SHOW AND HIDE VISIBILITY FROM PASSWORD TYPES\n\n\nfunction manipulateShowAndHideVisibility(showOrHide, input) {\n  if (input.value !== \"\" && showOrHide.className !== \"show-and-hide\") {\n    showOrHide.className = \"show-and-hide\";\n  }\n\n  if (input.value === \"\") showOrHide.className = \"show-and-hide invisible\";\n} //FUNCTIONS TO MANIPULATE THE PASSWORD VISIBILITY\n\n\nfunction manipulatePasswordVisibility(showAndHide, input) {\n  if (input.type === \"password\") return turnPasswordVisible(showAndHide, input);\n  hidePassoword(showAndHide, input);\n}\n\nfunction turnPasswordVisible(showAndHide, input) {\n  input.type = \"text\";\n  showAndHide.textContent = \"Hide\";\n}\n\nfunction hidePassoword(showAndHide, input) {\n  input.type = \"password\";\n  showAndHide.textContent = \"Show\";\n}\n\nexport default DefaultInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultInput\");","map":{"version":3,"sources":["C:/Glauber/Progamação/react_js/instagram/client/src/global_components/DefaultInput.js"],"names":["React","useRef","setInputClass","inputType","DefaultInput","type","value","onChange","classOfContainer","placeholder","placeholderRef","inputRef","showAndHideRef","inputClass","e","target","manipulatePlaceholderPosition","current","manipulateShowAndHideVisibility","manipulatePasswordVisibility","defaultProps","input","mustMovePlaceholder","verifyIfMustMovePlaceholder","to","moveInputPlaceholderUp","moveInputTextDown","moveInputPlaceholderDown","moveInputTextUp","verifyIfPlaceholderMustUp","verifyIfPlaceholderMustDown","className","showOrHide","showAndHide","turnPasswordVisible","hidePassoword","textContent"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\r\n\r\nfunction setInputClass(inputType) {\r\n  if(inputType !==\"password\") return \"default-input text-up\";\r\n  return \"default-input text-up input-password\";\r\n}\r\n\r\nconst DefaultInput = ({type, value, onChange, classOfContainer, placeholder}) => {\r\n  const placeholderRef = useRef();\r\n  const inputRef = useRef();\r\n  const showAndHideRef = useRef();\r\n  const inputClass = setInputClass(type);\r\n\r\n  return (\r\n    <div className={`position-relative ${classOfContainer}`}>\r\n      <input \r\n        type={type}\r\n        value={value}\r\n        className={inputClass}\r\n        ref={inputRef}\r\n        onChange={(e) => {\r\n          onChange(e.target.value);\r\n          manipulatePlaceholderPosition(placeholderRef.current, inputRef.current);\r\n          if(type === \"password\") {\r\n            manipulateShowAndHideVisibility(showAndHideRef.current, inputRef.current);\r\n          }  \r\n        }\r\n        }\r\n      />\r\n      <span className=\"placeholder position-down\" ref={placeholderRef}>\r\n        {placeholder}\r\n      </span>\r\n      {type === \"password\" && \r\n        <div \r\n          ref={showAndHideRef} \r\n          className=\"show-and-hide invisible\" \r\n          onClick={() => manipulatePasswordVisibility(showAndHideRef.current,\r\n          inputRef.current)}\r\n          >Show\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nDefaultInput.defaultProps = {\r\n  type:\"text\",\r\n  classOfContainer:\"\",\r\n  onChange:() => \"\",\r\n  value:\"\",\r\n  placeholder:\"\"\r\n}\r\n\r\n\r\n//FUNCTIONS TO MANIPULATE PLACEHOLDER MOVES\r\nfunction manipulatePlaceholderPosition(placeholder, input) {\r\n  const mustMovePlaceholder = verifyIfMustMovePlaceholder(input, placeholder);\r\n  if(mustMovePlaceholder.to === \"up\") {\r\n    moveInputPlaceholderUp(placeholder);\r\n    moveInputTextDown(input);\r\n  }\r\n  if(mustMovePlaceholder.to === \"down\") {\r\n    moveInputPlaceholderDown(placeholder);\r\n    moveInputTextUp(input);\r\n  }\r\n}\r\n\r\n\r\nfunction verifyIfMustMovePlaceholder(input, placeholder) {\r\n  if(input.value !== \"\") return verifyIfPlaceholderMustUp(placeholder);\r\n  return verifyIfPlaceholderMustDown(placeholder);\r\n}\r\n\r\nfunction verifyIfPlaceholderMustUp(placeholder) {\r\n  if(placeholder.className === \"placeholder position-up\") return {to:\"\"}\r\n  return {to:\"up\"}\r\n}\r\n\r\nfunction verifyIfPlaceholderMustDown(placeholder) {\r\n  if(placeholder.className === \"placeholder position-down\") return {to:\"\"}\r\n  return {to:\"down\"}\r\n}\r\n\r\n\r\nconst moveInputPlaceholderUp = (placeholder) => {\r\n  placeholder.className = \"placeholder position-up\";\r\n};\r\n\r\nconst moveInputPlaceholderDown = (placeholder) => {\r\n  placeholder.className = \"placeholder position-down\";\r\n}\r\n\r\nconst moveInputTextUp = (input) => {\r\n  if(input.type !== \"password\") return input.className = \"default-input text-up\";\r\n  input.className = \"default-input text-up input-password\"\r\n}\r\n\r\nconst moveInputTextDown = (input) => {\r\n  if(input.type !== \"password\") return input.className = \"default-input text-down\";\r\n  input.className = \"default-input text-down input-password\";\r\n}\r\n\r\n\r\n//FUNCTION TO MANIPULATE SHOW AND HIDE VISIBILITY FROM PASSWORD TYPES\r\nfunction manipulateShowAndHideVisibility(showOrHide, input) {\r\n  if(input.value !== \"\" && showOrHide.className !== \"show-and-hide\") {\r\n    showOrHide.className = \"show-and-hide\";\r\n  }\r\n  if(input.value === \"\") showOrHide.className = \"show-and-hide invisible\";\r\n}\r\n\r\n\r\n//FUNCTIONS TO MANIPULATE THE PASSWORD VISIBILITY\r\nfunction manipulatePasswordVisibility(showAndHide, input) {\r\n  if(input.type === \"password\") return turnPasswordVisible(showAndHide, input);\r\n  hidePassoword(showAndHide, input);\r\n}\r\n\r\nfunction turnPasswordVisible(showAndHide, input) {\r\n  input.type = \"text\";\r\n  showAndHide.textContent = \"Hide\";\r\n}\r\n\r\nfunction hidePassoword(showAndHide, input) {\r\n  input.type = \"password\";\r\n  showAndHide.textContent = \"Show\";\r\n}\r\n \r\n\r\nexport default DefaultInput;"]},"metadata":{},"sourceType":"module"}