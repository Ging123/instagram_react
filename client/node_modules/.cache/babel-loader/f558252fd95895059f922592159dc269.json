{"ast":null,"code":"var _jsxFileName = \"C:\\\\Glauber\\\\Progama\\xE7\\xE3o\\\\react_js\\\\instagram\\\\client\\\\src\\\\global_components\\\\inputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DefaultInput = ({\n  type,\n  value,\n  onChange,\n  classOfContainer,\n  placeholder\n}) => {\n  _s();\n\n  const placeholderRef = useRef();\n  const inputRef = useRef();\n  const showAndHideRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `position-relative ${classOfContainer}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      value: value,\n      className: \"default-input text-up\",\n      ref: inputRef,\n      onChange: e => {\n        onChange(e.target.value);\n        manipulatePlaceholderPosition(placeholderRef.current, inputRef.current);\n\n        if (type === \"password\") {\n          manipulateShowAndHideOption(showAndHideRef.current);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"placeholder position-down\",\n      ref: placeholderRef,\n      children: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: showAndHideRef,\n      className: \"show-and-hide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DefaultInput, \"HM2EfO++hiIQKsi1AHfiU/Gu+NQ=\");\n\n_c = DefaultInput;\nDefaultInput.defaultProps = {\n  type: \"text\",\n  classOfContainer: \"\",\n  onChange: () => \"\",\n  value: \"\",\n  placeholder: \"\"\n};\n\nfunction manipulateShowAndHideOption() {}\n\nfunction manipulatePlaceholderPosition(placeholder, input) {\n  const mustMovePlaceholder = verifyIfMustMovePlaceholder(input, placeholder);\n\n  if (mustMovePlaceholder.to === \"up\") {\n    moveInputPlaceholderUp(placeholder);\n    moveInputTextDown(input);\n  }\n\n  if (mustMovePlaceholder.to === \"down\") {\n    moveInputPlaceholderDown(placeholder);\n    moveInputTextUp(input);\n  }\n}\n\nfunction verifyIfMustMovePlaceholder(input, placeholder) {\n  if (input.value !== \"\") return verifyIfPlaceholderMustUp(placeholder);\n  return verifyIfPlaceholderMustDown(placeholder);\n}\n\nfunction verifyIfPlaceholderMustUp(placeholder) {\n  if (placeholder.className === \"placeholder position-up\") return {\n    to: \"\"\n  };\n  return {\n    to: \"up\"\n  };\n}\n\nfunction verifyIfPlaceholderMustDown(placeholder) {\n  if (placeholder.className === \"placeholder position-down\") return {\n    to: \"\"\n  };\n  return {\n    to: \"down\"\n  };\n}\n\nconst moveInputPlaceholderUp = placeholder => {\n  placeholder.className = \"placeholder position-up\";\n};\n\nconst moveInputPlaceholderDown = placeholder => {\n  placeholder.className = \"placeholder position-down\";\n};\n\nconst moveInputTextUp = input => {\n  input.className = \"default-input text-up\";\n};\n\nconst moveInputTextDown = input => {\n  input.className = \"default-input text-down\";\n};\n\nexport { DefaultInput };\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultInput\");","map":{"version":3,"sources":["C:/Glauber/Progamação/react_js/instagram/client/src/global_components/inputs.js"],"names":["React","useRef","DefaultInput","type","value","onChange","classOfContainer","placeholder","placeholderRef","inputRef","showAndHideRef","e","target","manipulatePlaceholderPosition","current","manipulateShowAndHideOption","defaultProps","input","mustMovePlaceholder","verifyIfMustMovePlaceholder","to","moveInputPlaceholderUp","moveInputTextDown","moveInputPlaceholderDown","moveInputTextUp","verifyIfPlaceholderMustUp","verifyIfPlaceholderMustDown","className"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\r\n\r\nconst DefaultInput = ({type, value, onChange, classOfContainer, placeholder}) => {\r\n  const placeholderRef = useRef();\r\n  const inputRef = useRef();\r\n  const showAndHideRef = useRef();\r\n\r\n  return (\r\n    <div className={`position-relative ${classOfContainer}`}>\r\n      <input \r\n        type={type}\r\n        value={value}\r\n        className=\"default-input text-up\"\r\n        ref={inputRef}\r\n        onChange={(e) => {\r\n          onChange(e.target.value);\r\n          manipulatePlaceholderPosition(placeholderRef.current, inputRef.current);\r\n          if(type === \"password\") {\r\n            manipulateShowAndHideOption(showAndHideRef.current);\r\n          }  \r\n        }\r\n        }\r\n      />\r\n      <span className=\"placeholder position-down\" ref={placeholderRef}>\r\n        {placeholder}\r\n      </span>\r\n      {type === \"password\" && \r\n        <div ref={showAndHideRef} className=\"show-and-hide\"/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nDefaultInput.defaultProps = {\r\n  type:\"text\",\r\n  classOfContainer:\"\",\r\n  onChange:() => \"\",\r\n  value:\"\",\r\n  placeholder:\"\"\r\n}\r\n\r\n\r\nfunction manipulateShowAndHideOption() {\r\n  \r\n}\r\n\r\n\r\nfunction manipulatePlaceholderPosition(placeholder, input) {\r\n  const mustMovePlaceholder = verifyIfMustMovePlaceholder(input, placeholder);\r\n  if(mustMovePlaceholder.to === \"up\") {\r\n    moveInputPlaceholderUp(placeholder);\r\n    moveInputTextDown(input);\r\n  }\r\n  if(mustMovePlaceholder.to === \"down\") {\r\n    moveInputPlaceholderDown(placeholder);\r\n    moveInputTextUp(input);\r\n  }\r\n}\r\n\r\n\r\nfunction verifyIfMustMovePlaceholder(input, placeholder) {\r\n  if(input.value !== \"\") return verifyIfPlaceholderMustUp(placeholder);\r\n  return verifyIfPlaceholderMustDown(placeholder);\r\n}\r\n\r\nfunction verifyIfPlaceholderMustUp(placeholder) {\r\n  if(placeholder.className === \"placeholder position-up\") return {to:\"\"}\r\n  return {to:\"up\"}\r\n}\r\n\r\nfunction verifyIfPlaceholderMustDown(placeholder) {\r\n  if(placeholder.className === \"placeholder position-down\") return {to:\"\"}\r\n  return {to:\"down\"}\r\n}\r\n\r\n\r\nconst moveInputPlaceholderUp = (placeholder) => {\r\n  placeholder.className = \"placeholder position-up\";\r\n};\r\n\r\nconst moveInputPlaceholderDown = (placeholder) => {\r\n  placeholder.className = \"placeholder position-down\";\r\n}\r\n\r\nconst moveInputTextUp = input => {input.className = \"default-input text-up\";}\r\nconst moveInputTextDown = input => {input.className = \"default-input text-down\";}\r\n\r\nexport {DefaultInput};"]},"metadata":{},"sourceType":"module"}